<!DOCTYPE html><html><head>
<title>山人拆分检索</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<base target="_blank" />
<link rel="stylesheet" href="js/sunman.css">
</head>

<body bgcolor="#ffffff">

<div  class='rich_media'>
<div  class='zoom'>

<hr size=3 color=#c9c9c9>
<details open>
<summary><span class="Title">1．山人單字查詢</span><span style="color:gray;font-size:0.65em;text-align:right;display:inline-block;width:calc(120px);"><b><i>點擊縮展</i></b> ☜</span></summary>
<hr color=#e7e7e7>
<span class="Line Options"><span class="LabelB">編碼</span>：<input class="Editor" type="text" id="inputCode" oninput="findCharacter(this.value)" style="width: 150px;" placeholder="請輸入編碼"></input><button class="Button" onclick="clearInputCode()">X</button> <span style="color:gray;font-size:0.65em; text-align:right;display:inline-block;width:calc(280px);">輸入法安裝與使用：1.<a href="https://github.com/arpcn/rime-shanren3/wiki/RimeSetup">Rime小狼毫</a> 2.<a href="https://github.com/arpcn/rime-shanren3/blob/master/rimesetup/山人輸入法強化訓練.rar">山人輸入法學習</a></span></span>
<span class="Line Options"><span class="LabelB">漢字：</span>
<span id="loadingf" class="Out Options" style="display:inline-block;">「1．山人單字查詢」字體加載中...</span>
<span id="loading" class="Out Options" style="display:inline-block;">「1．山人單字查詢」數據加載中，請稍候...</span>
<span class="Output" id="result"></span></span>
</details>


<script>
    function clearInputCode() {
        document.getElementById('inputCode').value = ''; // 清空输入框
        findCharacter(''); // 重新更新输出
    }
/*      function findCharacter(inputCode) {
        // 获取 iframe
        const iframe = document.getElementById('resultFrame');
        // 发送消息到 iframe
        iframe.contentWindow.postMessage(inputCode, '*');
    }
   接收来自 iframe 的高度信息
    window.addEventListener('message', function(event) {
        const height = event.data; // 获取 iframe 发送的高度
        const iframe = document.getElementById('resultFrame');
        iframe.style.height = height + 'px'; // 设置 iframe 的高度
    });*/
</script>



<hr size=2 color=#c9c9c9>
<details open>   <!--  <details open> -->
<summary><span class="Title">2．山人拆分檢索</span><span style="color:gray;font-size:0.65em;text-align:right;display:inline-block;width:calc(120px);"><b><i>點擊縮展</i></b> ☜</span></summary>
<hr color=#e7e7e7>
<span class="Line Options"><span class="LabelB">漢字</span>：<input class="Editor" id="input" oninput="searchCharacter(this.value)" style="width: 150px;" placeholder="請輸入漢字"></input><button class="Button" onclick="clearInput()">X</button></span>
<hr color=#f0f0f0>
<iframe id="outputFrame" src="output.html" style="border: none; width: 100%; height: 300px;"></iframe>
</details>


<script>
    function clearInput() {
        document.getElementById('input').value = ''; // 清空输入框
        searchCharacter(''); // 重新更新输出
    }

    function searchCharacter(input) {
        const iframe = document.getElementById('outputFrame');
        // 发送消息到 iframe
        iframe.contentWindow.postMessage(input, '*');
    }

/*    window.addEventListener('message', function(event) {
        const height = event.data; // 获取 iframe 发送的高度
        const iframe = document.getElementById('outputFrame');
        iframe.style.height = height + 'px'; // 设置 iframe 的高度
    });    */

</script>


<hr size=2 color=#c9c9c9>
<details open>
<summary><span class="Title">3．山人全息碼查字</span><span style="color:gray;font-size:0.65em;text-align:right;display:inline-block;width:calc(120px);"><b><i>點擊縮展</i></b> ☜</span></summary>
<hr color=#e7e7e7>
<span class="Line Options"><span class="LabelB">全息碼</span>：<input class="Editor" type="text" id="inputCodeB" oninput="findCharacterB(this.value)" style="width: 150px;" placeholder="請輸入編碼"></input><button class="Button" onclick="clearInputCodeB()">X</button> </span>
<span class="Line Options"><span class="LabelB" style="position:relative; top:-123px;">漢字：</span><iframe id="resultBFrame" src="resultB.html" style="display: inline-block; border: none; width: 100%; height: 150px;position:relative; top:-7px;"></iframe></span>
</details>

<script>
    function clearInputCodeB() {
        document.getElementById('inputCodeB').value = ''; // 清空输入框
        findCharacterB(''); // 重新更新输出
    }
      function findCharacterB(inputCodeB) {
        // 获取 iframe
        const iframe = document.getElementById('resultBFrame');
        // 发送消息到 iframe
        iframe.contentWindow.postMessage(inputCodeB, '*');
    }
/*   接收来自 iframe 的高度信息
    window.addEventListener('message', function(event) {
        const height = event.data; // 获取 iframe 发送的高度
        const iframe = document.getElementById('resultBFrame');
        iframe.style.height = height + 'px'; // 设置 iframe 的高度
    });*/
</script>


</div>
</div>


<script>
    function loadScript(src) {
        return new Promise((resolve, reject) => {
            const script = document.createElement('script');
            script.src = src;
            script.onload = () => resolve();
            script.onerror = () => reject(new Error(`加载脚本失败: ${src}`));
            document.head.appendChild(script);
        });
    }

    async function loadScripts() {
        const scriptFiles = [
            'js/decompose-part0.js'
        ];

        // 显示加载提示
        document.getElementById('loading').style.display = 'block';

        // 等待所有脚本加载完成
        try {
            await Promise.all(scriptFiles.map(file => loadScript(file)));
        } catch (error) {
            console.error(error);
        } finally {
            // 隐藏加载提示并显示内容
            document.getElementById('loading').style.display = 'none';
        //      document.getElementById('content').style.display = 'block';
        }
    }

    // 初始化加载过程
    loadScripts();
</script>

<!-- UI 程式区1 -->
    <script src="js/decompose-part0.js"></script>
    <script>
        // 原始数据（以数组形式手动模拟重复键的数据）

        // 重组数据，处理重复键
        var data = {};
        rawEntries.forEach(entry => {
            if (!data[entry.key]) {
                data[entry.key] = []; // 如果键不存在，就初始化为空数组
            }
            data[entry.key].push(entry.value); // 将值加入对应的数组
        });

        // 查询函数
        function findCharacter() {
            const input = document.getElementById("inputCode").value.trim().toLowerCase();
            const resultDiv = document.getElementById("result");
            resultDiv.innerHTML = ''; // 清空结果区域

            if (input.length === 0) {
                resultDiv.innerHTML = '<span style="color:gray;font-size:0.65em;font-weight:lighter;">無編碼</span>';
                return;
            }

            const results = [];
            if (input.length === 1 || input.length === 2) {
                // 输入1或2个字符时，匹配全码
                if (data[input]) {
                    results.push(...data[input]);
                }
            } else {
                // 输入3个或更多字符时，匹配以输入字符串开头的所有编码
                for (const key in data) {
                    if (key.startsWith(input)) {
                        results.push(...data[key]);
                    }
                }
            }

            if (results.length > 0) {
                resultDiv.innerHTML = [...new Set(results)].join("，"); // 去重后显示
            } else {
                resultDiv.innerHTML = '<span style="color:gray;font-size:0.65em;font-weight:lighter;">無對應的漢字</span>';
            }
        }
    </script>

<!-- 字體1 -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/fontfaceobserver/2.1.0/fontfaceobserver.standalone.js"></script>
<script>
    // 定义一个异步加载的函数
    function loadFonts() {
        const font1 = new FontFaceObserver('ziti1');
        const font2 = new FontFaceObserver('ziti2');
        const font3 = new FontFaceObserver('ziti3');
        const font4 = new FontFaceObserver('ziti4');

        // 显示加载提示
        const loadingfDiv = document.getElementById('loadingf');
        loadingfDiv.style.display = 'block';

        // 使用 Promise.all 并行加载所有字体
        Promise.all([
            font1.load(),
            font2.load(),
            font3.load(),
            font4.load()
        ]).then(function () {
          //   console.log('所有字体加载完成');
            // 为 HTML 添加一个 class，表示字体已加载
            document.documentElement.classList.add('fonts-loaded');
        }).catch(function (err) {
         //    console.error('字体加载失败:', err);
        }).finally(function () {
            // 隐藏加载提示
            loadingfDiv.style.display = 'none';
        });
    }

    // 调用字体加载函数
    loadFonts();
</script>


<!----------------------------------------------------------------------------->

</body></html>